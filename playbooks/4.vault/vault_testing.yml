#ansible-playbook -i invfile Playbooks/vault_testing.yml -vv --ask-vault-pass
---
- name: Run AWS Cli Commands On All Servers
  hosts: pvt
  gather_facts: yes
  become: yes
  become_user: root
  serial: 3
  vars:
    user_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      63366433346339616138303335626163303934303865623938393837303733393435323739653162
      3237643838623639646566353866643931646162316461300a636530386163616366306635623362
      37653361663331623532393232393139313064653963386566373937326162303965616662656137
      3931373964633133390a653834333332616265653035643136383330663139333236303738353031
      3138

  tasks:
    - name: Create .aws folder
      shell: mkdir -p /root/.aws
      ignore_errors: yes
    - name: Copy Encrypted File To /tmp
      copy:
        src: /tmp/{{item}} #This Encrypted File Must Be Created Prior To Running The Playbook.
        dest: /tmp/{{item}}
        owner: root
        group: root
        mode: "0600"
      with_items:
        - aws_creds
        - tls.key
        - tls.crt
    - name: Copy Encrypted Credentials File To .aws folder
      copy:
        src: /tmp/aws_creds #This Encrypted File Must Be Created Prior To Running The Playbook.
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: "0600"
    - name: Check S3 Buckets
      shell: aws s3 ls | cut -d " " -f 3
      register: buckets
    - name: Print Bucket Name
      debug:
        var: buckets
    - name: Get VPCS
      shell: aws ec2 describe-vpcs | jq ".Vpcs[].VpcId" -r
      register: vpcs
    - name: Print VPC ID
      debug:
        var: vpcs
    - name: Creating admin "{{item}}"
      user:
        name: "{{item}}"
        state: present
        comment: Admin User "{{item}}"
        groups: root
        shell: /bin/bash
        group: sudo
        password: "{{ '%s' | format(user_password) | regex_replace('\n', '') | password_hash('sha512') }}"
        password_expire_min: 1
      with_items:
        - Avinash
        - Saikiran
        - Gnane
    - name: Replace Password Authentication To Yes
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no"
        line: PasswordAuthentication yes
        backup: yes
      notify:
        - Restart SSH Service
  handlers:
    - name: Restart SSH Service
      shell: service sshd restart
    - name: Restart elastic-agent
      shell: sudo heartbeat setup && sudo service heartbeat-elastic start
